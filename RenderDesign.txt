IN 3D GAME PROJECT: RenderTest.cpp -> main

GL
glfwWindow
glew

RenderEngine()
{
	//glMapBuffer
}

(I)RenderMesh (for Visualization) Class + Header
RenderMesh()
		addVertex(glm::vec3 vertex, const unsigned int index) // + index
		setColor(glm::vec4 color)
//TODO	addColor(glm::vec4 color)
	
//TODO	addTexture(texture, uv);
	
		setVertices(vectorVertices, vectorIndices)
//TODO	addVertices(vectorVertices, vectorIndices)
		setColor(glm::vec4 color);
//TODO	addTexture(texture, vector);

TextureLoader -> loads imagezz

ObjectLoader -> loads object files
		Returns (I)RenderMesh (for Visualization) Class + Header
		texture (image), color glm::vec4
		vertices

Shader 
	Vertex
	Fragment
	(last)Lighting
	(last)Post Processing -> touch ups: anti-aliasing, fxaa, etc. 



Renderable 
{
		IRenderMesh* mesh;
		
		Renderable(renderMesh);

		render()
		{
		//DONT DO ANYTHING

			vertices->bind();
			texture->bind();
	
			texture->unbind();
			vertices->unbind();
		//
		}

}







renderThread()
{
		for( Rendearble* r ; rs)
		{
			r->render();
		}

}